name: Continuous Integration Tests (Manual)

on:
  workflow_dispatch:

jobs:
  unit-and-integration-tests:
    name: Unit & Integration Tests (${{ matrix.service }})
    runs-on: ubuntu-latest
    env:
      CI: "true"
    strategy:
      fail-fast: false
      matrix:
        service: [backend, frontend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      
      - name: Upgrade npm to 11.5.2
        run: npm install -g npm@11.5.2


      - name: Install backend dependencies
        if: matrix.service == 'backend'
        working-directory: backend
        run: npm ci

      - name: Run backend tests
        if: matrix.service == 'backend'
        working-directory: backend
        env:
          NODE_ENV: test
        run: npm test --if-present

      - name: Install deps and run frontend tests
        if: matrix.service == 'frontend'
        working-directory: frontend
        run: |
          npm ci
          npm test --if-present -- --runInBand

  build-frontend-prod-like:
    name: Build Frontend with Prod-like Env
    needs: unit-and-integration-tests
    runs-on: ubuntu-latest
    env:
      CI: "true"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      
      - name: Upgrade npm to 11.5.2
        run: npm install -g npm@11.5.2

      - name: Cache Next.js build cache
        uses: actions/cache@v4
        with:
          path: frontend/.next/cache
          key: nextjs-${{ runner.os }}-node20-${{ hashFiles('frontend/package-lock.json') }}-v1
          restore-keys: |
            nextjs-${{ runner.os }}-node20-
            nextjs-${{ runner.os }}-

      - name: Install dependencies
        working-directory: frontend
        run: npm ci

      - name: Build production bundle (dummy env)
        working-directory: frontend
        env:
          NEXT_PUBLIC_API_URL: 'https://dummy/api'
        run: npm run build

      - name: Check for duplicated API prefix via manifests
        working-directory: frontend
        run: node ../scripts/check_api_prefix.js .next

      - name: Upload Next.js build artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: next-build-${{ github.run_id }}
          path: |
            frontend/.next
            frontend/package.json
            frontend/next.config.*
            frontend/tsconfig.json
